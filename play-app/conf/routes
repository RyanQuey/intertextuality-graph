# Routes
# This file defines all application routes (Higher priority routes first)
# https://www.playframework.com/documentation/latest/ScalaRouting
# ~~~~

# An example controller showing a sample home page
GET     /                                   controllers.HomeController.index
GET     /explore                            controllers.HomeController.explore
GET     /tutorial                           controllers.HomeController.tutorial
GET     /test                               controllers.HomeController.test
POST     /test           controllers.ConnectionsController.test()

GET     /our-world-in-data-cambodia                           controllers.ChartsController.iframes



# routes for accessing vertices/edges
# currently also including routes that default to Gen 1:1 if nothing is passed in as params
# TODO consolidate some of these, so users hit same route but different query params to get more specificity

#########################
# Books
#########################
GET     /books/:bookName           controllers.BooksController.findOne(bookName: String)

#########################
# Chapters 
#########################
GET     /books/:bookName/chapters/:chapterNumber           controllers.ChaptersController.findOne(bookName: String, chapterNumber: Int)

#########################
# Verses 
#########################

#########################
#  Connections
#########################
# NOTE also creates vertices along with it, if they don't exist already
POST     /connections           controllers.ConnectionsController.create()

#########################
# texts 
#########################
GET     /texts/texts-starting-with-ref           controllers.TextsController.findTextsByStartingRef(book: String, chapter : Option[Int] ?= None, verse : Option[Int] ?= None)

GET     /texts/all-values-along-path-for-ref           controllers.TextsController.findAllValuesAlongPathForRef(book: String, chapter : Option[Int] ?= None, verse : Option[Int] ?= None, hopsCount : Int ?= 1)


#########################
# Map static resources from the /public folder to the /assets URL path
GET     /assets/*file               controllers.Assets.versioned(path="/public", file: Asset)
